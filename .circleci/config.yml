version: 2.1
orbs:
  orb-tools: circleci/orb-tools@8.27.4
  sonarcloud: sonarsource/sonarcloud@dev:alpha
jobs:
  test:
    parameters:
      image:
        type: string
    docker:
      - image: <<parameters.image>>:latest
    steps:
      - checkout
      - sonarcloud/scan
workflows:
  publish-dev:
    jobs:
      - orb-tools/pack:
          source-dir: src/main
          destination-orb-path: orb.yml
          workspace-path: orb.yml
          artifact-path: orb.yml
      - orb-tools/publish-dev:
          context: Publishing Orb
          orb-name: sonarsource/sonarcloud
          requires: [orb-tools/pack]
      - test:
          name: test-node
          image: node
          context: SonarCloud Analysis
          requires: [orb-tools/publish-dev]
      - test:
          name: test-circleci-python
          image: circleci/python
          context: SonarCloud Analysis
          requires: [orb-tools/publish-dev]
      - orb-tools/publish:
          context: Publishing Orb
          orb-ref: sonarsource/sonarcloud@1.0.2
          attach-workspace: true
          requires: [test-node, test-circleci-python]
          filters:
            branches:
              only: master


#version: 2.1
#
#orbs:
#  android: circleci/android@1.0.3
#  gcp-cli: circleci/gcp-cli@2.2.0
#  sonarcloud: sonarsource/sonarcloud@1.0.0
##  sonarcloud: sonarsource/sonarcloud@1.0.2
##  sonarqube: clicklogiq/sonarqube@1.0.1
#
#jobs:
##  unit-test:
##    executor:
##      name: android/android-machine
##      resource-class: xlarge
##    steps:
##      - checkout
##      - android/restore-gradle-cache
##      - android/restore-build-cache
##      #      - android/run-tests:
##      #          test-command: ./gradlew testDebug
##      - android/save-gradle-cache
##      - android/save-build-cache
##      - run:
##          name: Save test results
##          command: |
##            sudo chmod +x ./gradlew
##            mkdir -p ~/test-results/junit/
##            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
##          when: always
##      - store_test_results:
##          path: ~/test-results
##      - store_artifacts:
##          path: ~/test-results/junit
#  build:
#    docker:
#      - image: 'circleci/openjdk:11-jdk'
#    steps:
#      - checkout
#      - sonarcloud/scan
##      - run:
##          name: Analyze on SonarCloud
##          command: gradle build sonarqube
#
##  release-build:
##    executor:
##      name: android/android-machine
##      resource-class: xlarge
##    steps:
##      - checkout
##      - android/restore-gradle-cache
##      - android/restore-build-cache
##      - run:
##          name: Assemble release build
##          command: |
##            ./gradlew assembleRelease
##      - store_artifacts:
##          path: app/build/outputs/apk/release
#
#
##  code-analysis:
##    executor:
##      name: ct-deploy/java_executor
##      resource_class: large
##    steps:
##      - checkout
##      - run:
##          name: Analyze on SonarCloud
##          command: gradle build sonarqube
##      - run:
##          name: Assemble release build
##          command: ./gradlew assembleRelease
##      - store_artifacts:
##          path: app/build/outputs/apk/release/app-release-unsigned.apk
#
#workflows:
#  main:
#    jobs:
#      - build:
#          context: sonarcloud
#
##  test-and-build:
##    jobs:
##      - release-build